buildscript {
    ext {
        springBootVersion = '2.3.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.spring.cloud.review'
version = '1.0'
sourceCompatibility = '11'

ext {
    mapstructVersion = "1.3.1.Final"
    springCloudVersion = "Hoxton.SR6"
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':api')

    implementation 'org.projectlombok:lombok:1.18.22'
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation('org.springframework.boot:spring-boot-starter-actuator')
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation("org.mapstruct:mapstruct:${mapstructVersion}")
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')

    runtimeOnly('mysql:mysql-connector-java')

    compileOnly 'org.projectlombok:lombok:1.18.22'
    compileOnly("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testAnnotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")

    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    testImplementation('com.h2database:h2')
}

dependencyManagement {
    imports { mavenBom("org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}")}
}